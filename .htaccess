#   Empêche la visualisation de l'arborescence, n'a rien à voir avec le masquage du « index.php ».
Options -Indexes

#<IfModule mod_rewrite.c>
#   Active le module de réécriture d'URL.
    RewriteEngine on
    RewriteBase /\SuiviMarcheT/
#-v2/
#
#   Fixe les règles de réécriture d'URL. Ici, nous utilisons une liste blanche.
#
#   Toutes les URL qui ne correspondent pas à ces masques sont réécrites.
    RewriteCond $1 !^(index\.php|assets/|robots\.txt|uploads|pdfs|phpMyAdmin|images|docs|ppt|intranet|iav_project)
#   Toutes les autres URL vont être redirigées vers le fichier index.php.
    RewriteRule ^(.*)$ /\SuiviMarcheT/index.php/$1 [L]
#</IfModule>

#<IfModule !mod_rewrite.c>
#    ErrorDocument 404 /\SuiviMarcheT/index.php
#</IfModule>

 # Rules to correctly serve gzip compressed CSS and JS files.
  # Requires both mod_rewrite and mod_headers to be enabled.
  <IfModule mod_headers.c>
    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

    # Serve gzip compressed JS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header set Content-Encoding gzip
      # Force proxies to cache gzipped & non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
  </IfModule>

  # Add headers to all responses.
<IfModule mod_headers.c>
  # Disable content sniffing, since it's an attack vector.
  Header always set X-Content-Type-Options nosniff
</IfModule>

 #
 # eh april 29th 2015

 <ifModule mod_gzip.c>
 	mod_gzip_on Yes
 	mod_gzip_dechunk Yes
 	mod_gzip_item_include file .(html?|txt|css|js|php|pl)$
 	mod_gzip_item_include handler ^cgi-script$
 	mod_gzip_item_include mime ^text/.*
 	mod_gzip_item_include mime ^application/x-javascript.*
 	mod_gzip_item_exclude mime ^image/.*
 	mod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*
 </ifModule>
 #
 #
 # eh April 23 2015
 #
 #




  <FilesMatch "^(css|js)__[A-Za-z0-9-_]{43}__[A-Za-z0-9-_]{43}__[A-Za-z0-9-_]{43}.(css|js)(\.gz)?">
       # No mod_headers
       <IfModule !mod_headers.c>
         # No mod_expires
         <IfModule !mod_expires.c>
           # Use ETags.
           FileETag MTime Size
         </IfModule>
       </IfModule>

       # Use Expires Directive.
       <IfModule mod_expires.c>
         # Do not use ETags.
         FileETag None
         # Enable expirations.
         ExpiresActive On
         # Cache all aggregated css/js files for 52 weeks after access (A).
         ExpiresDefault A31449600
       </IfModule>

       <IfModule mod_headers.c>
         # Do not use etags for cache validation.
         Header unset ETag
         <IfModule !mod_expires.c>
           # Set a far future Cache-Control header to 52 weeks.
           Header set Cache-Control "max-age=31449600, no-transform, public"
         </IfModule>
         <IfModule mod_expires.c>
           Header append Cache-Control "no-transform, public"
         </IfModule>
       </IfModule>
     </FilesMatch>
     # Force advagg .js file to have the type of application/javascript.
     <FilesMatch "^js__[A-Za-z0-9-_]{43}__[A-Za-z0-9-_]{43}__[A-Za-z0-9-_]{43}.js(\.gz)?">
       ForceType application/javascript
</FilesMatch>
